n, m = map(int, input().split())
d = [[0]*m for _ in range(n)]
x,y,direction = map(int, input().split())
d[x][y] = 1

graph = [list(map(int, input().split())) for _ in range(n)]

print('grpah =',graph)

dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

def turn_left():
    global direction
    direction -= 1
    if direction == -1:
        direction = 3

count = 1
turn_time = 0
while True:
    turn_left()
    nx = x + dx[direction]
    ny = y + dy[direction]

    # 회전한 이후 정면에 가보지 않은 칸이 존재하는 경우 이동
    if d[nx][ny] == 0 and graph[nx][ny] == 0:
        d[nx][ny] = 1
        x,y = nx, ny
        count += 1
        turn_time = 0
        continue
    # 회전한 이후 가보지 않은 칸이 없거나 바다인 경우
    else:
        turn_time += 1

    # 네 방향 모두 갈 수 없는 경우
    if turn_time == 4:
        nx = x - dx[direction]
        ny = y - dy[direction]
        if graph[nx][ny] == 0:
            x = nx
            y = ny
        else:
            break
        turn_time = 0

print(count)
