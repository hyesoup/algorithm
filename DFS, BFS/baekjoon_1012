from collections import deque
t = int(input())
for _ in range(t):
    m,n,k = map(int, input().split())
    graph = []
    visited = []
    for i in range(m):
        graph.append([])
        visited.append([])
        for j in range(n):
            graph[i].append(0)
            visited[i].append(False)

    for _ in range(k):
        a,b = map(int, input().split())
        graph[a][b] = 1


    dx = [-1,1,0,0]
    dy = [0,0,-1,1]

    def bfs(a,b):
        queue = deque()
        queue.append((a,b))

        while queue:
            x,y = queue.popleft()
            for i in range(4):
                nx = x+dx[i]
                ny = y+dy[i]
                if 0<=nx<m and 0<=ny<n:
                    if graph[nx][ny] == 1:
                        queue.append((nx,ny))
                        graph[nx][ny] = 0

    cnt=0
    for i in range(m):
        for j in range(n):
            if graph[i][j] == 1:
                bfs(i,j)
                cnt += 1
    print(cnt)

