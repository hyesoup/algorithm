from collections import deque
n = int(input())
graph = []
for _ in range(n):
    graph.append(list(input()))
visited = [[0]*n for _ in range(n)]

dx = [-1,1,0,0]
dy = [0,0,-1,1]

def bfs(a,b):
    cnt = []
    queue = deque()
    queue.append((a,b))
    while queue:
        x,y = queue.popleft()
        visited[x][y] = 1
        for i in range(4):
            nx = x+dx[i]
            ny = y+dy[i]
            if 0<=nx<n and 0<=ny<n and visited[nx][ny]==0:
                if graph[nx][ny] == graph[x][y]:
                    visited[nx][ny] = 1
                    queue.append((nx,ny))

cnt = 0
for i in range(n):
    for j in range(n):
        if visited[i][j]==0:
            bfs(i,j)
            cnt+=1

print(cnt)

cnt_2 = 0
for i in range(n):
    for j in range(n):
        if graph[i][j] == 'R':
            graph[i][j] = 'G'

visited = [[0]*n for _ in range(n)]
for i in range(n):
    for j in range(n):
        if visited[i][j] == 0:
            bfs(i,j)
            cnt_2 +=1

print(cnt_2)
